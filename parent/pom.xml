<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns = "http://maven.apache.org/POM/4.0.0"
    xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>findplaces</groupId>
    <artifactId>findplaces-parent</artifactId>
    <version>1.0.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>FindPlaces Application</name>
    <modules>
        <module>commons</module>
        <module>datamining</module>
        <module>geocoding</module>
        <module>geopersist</module>
		<module>model</module>
		<module>persistence</module>
		<module>usermoduleclient</module>
		<module>usermodule</module>
		<module>web</module>
        <module>ear</module>
    </modules>
    <properties>
        <!--Explicitly declaring the source encoding eliminates the following 
        message: -->
        <!--[WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
        resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--Define the version of JBoss' Java EE 6 APIs and Tools we want 
        to import. -->
        <jboss.bom.version>1.0.0.Final</jboss.bom.version>
        <junit.version>4.10</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <!--Alternatively, comment out the above line, and un-comment the 
        line below to use version 1.0.0.M12-redhat-1 which is a release certified 
        to work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 
        maven repository. -->
        <!--<jboss.bom.version>1.0.0.M12-redhat-1</jboss.bom.version>> -->
    </properties>
    <dependencyManagement>
        <dependencies>
            <!--Define the version of the EJB jar so that we don't need 
            to repeat ourselves in every module -->
            <dependency>
                <groupId>findplaces</groupId>
                <artifactId>findplaces-commons</artifactId>
                <version>1.0.0.0-SNAPSHOT</version>
                <type>ejb</type>
            </dependency>
            <dependency>
                <groupId>findplaces</groupId>
                <artifactId>findplaces-datamining</artifactId>
                <version>1.0.0.0-SNAPSHOT</version>
                <type>ejb</type>
            </dependency>
            <dependency>
                <groupId>findplaces</groupId>
                <artifactId>findplaces-geocoding</artifactId>
                <version>1.0.0.0-SNAPSHOT</version>
                <type>ejb</type>
            </dependency>
            <dependency>
                <groupId>findplaces</groupId>
                <artifactId>findplaces-geopersist</artifactId>
                <version>1.0.0.0-SNAPSHOT</version>
                <type>ejb</type>
            </dependency>
			<dependency>
				<groupId>findplaces</groupId>
				<artifactId>findplaces-model</artifactId>
				<version>1.0.0.0-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>findplaces</groupId>
				<artifactId>findplaces-persistence</artifactId>
				<version>1.0.0.0-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>findplaces</groupId>
				<artifactId>findplaces-usermoduleclient</artifactId>
				<version>1.0.0.0-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>findplaces</groupId>
				<artifactId>findplaces-usermodule</artifactId>
				<version>1.0.0.0-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>findplaces</groupId>
				<artifactId>findplaces-web</artifactId>
				<version>1.0.0.0-SNAPSHOT</version>
				<type>war</type>
			</dependency>
            <!--Define the version of the WAR so that we don't need to repeat 
            ourselves in every module -->
            <!--dependency>
            <groupId>mateus</groupId>
            <artifactId>projeto-tcc-web</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>war</type>
            <scope>compile</scope>
            </dependency-->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!--JBoss distributes a complete set of Java EE 6 APIs including 
            a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or 
            a collection) of artifacts. We use this here so that we always get the correct 
            versions of artifacts. Here we use the jboss-javaee-6.0-with-tools stack 
            (you can read this as the JBoss stack of the Java EE 6 APIs, with some extras 
            tools for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate 
            stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras 
            from the Hibernate family of projects) -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${jboss.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
                <version>${jboss.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <!--Compiler plugin enforces Java 1.6 compatibility and 
                activates annotation processors -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <!--The JBoss AS plugin deploys your ear to a local JBoss 
                AS container -->
                <!--Due to Maven's lack of intelligence with EARs we need 
                to configure the jboss-as maven plugin to skip deployment for all modules. 
                We then enable it specifically in the ear module. -->
                <plugin>
                    <groupId>org.jboss.as.plugins</groupId>
                    <artifactId>jboss-as-maven-plugin</artifactId>
                    <version>7.1.1.Final</version>
                    <inherited>true</inherited>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
